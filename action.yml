name: "Create avro schema"
description: "Se realiza el an√°lisis en sonarqube para NET"
inputs:
  github_token:
    description: "github token"
    required: true
  AVRO_VERSION:
    requiered: false
    default: 1.11.0
  INPUT:
    requiered: false
    default: schema
  OUTPUT:
    requiered: false
    default: struct
  repository:
    requiered: false
    default: architecture-it/integracion-schemas-event-go
  schema_event: 
    description: "Listado de eventos"
    required: true
  app_name:
    description: "Nombre de la app usado como directorio"
    required: true
  directory_repository:
    requiered: false
    default: repo
  organization:
    requiered: false
    default: 'architecture-it'
  repo:
    requiered: false
    default: 'integracion-schemas-event-go'
runs:
  using: "composite"
  steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: actions/setup-go@v2
        with:
          version: 1.17.7
      - name: Get gogen-avro Tools
        run: go get github.com/actgardner/gogen-avro/v10/cmd/...
        shell: bash
      - name: Download avro results
        uses: actions/download-artifact@v1
        with:
          name: avro-schema
          path: ${{ inputs.INPUT }}
      - name: Create Folder output
        run: mkdir ${{ inputs.OUTPUT }}
        shell: bash
      - name: Generate go struct
        env: 
          package: ${{ inputs.app_name }}Events
        run: |
         files = ${{ inputs.schema_event }}
         for f in ${files[@]}; 
         do
         echo $f 
         /home/runner/go/bin/gogen-avro --package=${{ env.package }} ${{ inputs.OUTPUT }} ${{ inputs.INPUT }}/${f}.avsc; 
         done 
        shell: bash
      - name: Check events
        shell: bash
        run: ls
        working-directory:  ${{ inputs.OUTPUT }}
      - name: Checkout Nuget go for verify branch
        uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
          repository: ${{ inputs.repository }}
          token: ${{ inputs.github_token }}
          path: ${{ inputs.directory_repository }}
      - name: Remove directory
        shell: bash
        run: |
         if [ -d "./${{ inputs.app_name }}" ] 
         then
            rm -r {{ inputs.app_name }}
         fi
        working-directory: ${{ inputs.directory_repository }}
      - name: Create directory
        shell: bash
        run: mkdir ${{ inputs.app_name }}
        working-directory: ${{ inputs.directory_repository }}

      - name: Check events
        shell: bash
        run: ls

      - name: Copy/Create file
        shell: bash
        run: |
          echo "Copying..."
          cp -R ${{ inputs.OUTPUT }}/* ./${{ inputs.directory_repository }}/${{ env.app_name }}
      - name: Push to Go Nuget
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ inputs.github_token }}
        with:
          source-directory: ./${{ inputs.directory_repository }}/
          destination-github-username: ${{ inputs.organization }}
          destination-repository-name: ${{ inputs.repo }}
          user-email: ciberseguridad@andreani.com
          commit-message: add ${{ inputs.app_name }} schemas 
          target-branch: 'main'