name: "SonarQube Analyzer NET"
description: "Se realiza el an√°lisis en sonarqube para NET"
inputs:
  github_username:
    description: "usuario de github para autenticarse en los packages"
    required: true
  github_token:
    description: "token del usuario con permisos de lectura en packages"
    required: true
  workdir_src:
    description: "directorio donde se encuentra el project a compilar DEFAULT: ./"
    required: false
    default: './'
  workdir_test:
    description: "directorio donde se encuentra los test DEFAULT: ./"
    required: false
    default: './'
  sonar_url: 
    description: "url sonarqube"
    required: true
  sonar_token: 
    description: "token sonarqube"
    required: true
runs:
  using: "composite"
  steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          
      - name: Key Repository
        id: variables
        uses: actions/github-script@v5
        with:
          script: |
            const name = context.repo.repo
            const organization = context.repo.owner
            core.exportVariable('KEY_REPOSITORY', `${organization}_${name}`)
      
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: | 
            3.1.x
            5.0.x
      
      - name: Sonarqube Begin
        run: |
          dotnet nuget locals -c all
          dotnet nuget add source https://nuget.pkg.github.com/architecture-it/index.json --name github -u ${{ inputs.github_username }} -p ${{ inputs.github_token }} --store-password-in-clear-text
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /key:"${{ env.KEY_REPOSITORY }}" -d:sonar.login="${{ inputs.sonar_token }}" -d:sonar.host.url="${{ inputs.sonar_url }}" -d:sonar.qualitygate.wait=true -d:sonar.cs.vstest.reportsPaths=**/*.trx -d:sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml
        shell: bash

      - name: Restore 
        run: dotnet restore
        shell: bash

      - name: Build
        run: dotnet build
        shell: bash

      - name: Test 
        env:
          ASPNETCORE_ENVIRONMENT: Development
        shell: bash
        run: dotnet test --collect:"XPlat Code Coverage" --results-directory TestResults/ --logger "trx;LogFileName=unittests.trx" --no-build --no-restore --configuration release --DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

      - name: Sonarqube end
        run: dotnet sonarscanner end -d:sonar.login="${{ inputs.sonar_token }}"
        shell: bash
        env:
          GITHUB_TOKEN: ${{ inputs.github_token }}
