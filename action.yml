name: "Create an issue in Repository"
description: "Registra las ocaciones en las que se reinicia un servicio"

inputs:
  motivo:
    description: 'Motivo del Restart'
    required: false
    default: ''
  test:
    description: 'Test'
    required: true
    default: ''
    
  qa:
    description: 'QA'
    required: true
    default: ''
  prod:
    description: 'Production'
    required: true
    default: ''
  github_token:
    description: 'Token de Github'
    required: true

outputs:
  issue_number:
    description: 'ID de la issue creada'
    value: ${{ steps.validate_format.outputs.issue_number }}


runs:
  using: "composite"
  steps:

    - name: Validate Format
      id: validate_format
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          const inputs = {
            motivo: '${{ inputs.motivo }}',
            test: '${{ inputs.test }}',
            qa: '${{ inputs.qa }}',
            prod: '${{ inputs.prod }}'
          };

          // Person who run the action manually
          const person = context.actor;


          // Numero de action ejecutada
          const actionNumber = context.runNumber;

          const title = `ðŸ¦– Restart Service [EjecuciÃ³n #${actionNumber}]`;
          const labels = ['restart-service', 'cicd'];

          const body = `

          ## Motivo ðŸ“ƒ
          ${inputs.motivo}

          ## Ambientes
          ${inputs.test === 'true' ? '- [x]' : '- [ ]'} Test
          ${inputs.qa === 'true'? '- [x]' : '- [ ]'} QA
          ${inputs.prod === 'true'? '- [x]' : '- [ ]'} Production

          ## Autor
          ${person}

          `;

        
          const res = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title,
            body,
            labels
          });

          // print in github action
          console.log(res.data);

          const issueId = res?.data?.number ?? '';

          core.setOutput('issue_number', issueId);

    