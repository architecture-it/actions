name: "SonarQube Analyzer NET"
description: "Se realiza el an√°lisis en sonarqube para NET"
inputs:
  github_username:
    description: "usuario de github para autenticarse en los packages"
    required: true
  github_token:
    description: "token del usuario con permisos de lectura en packages"
    required: true
  workdir_src:
    description: "directorio donde se encuentra el project a compilar DEFAULT: ./"
    required: false
    default: './'
  workdir_test:
    description: "directorio donde se encuentra los test DEFAULT: ./"
    required: false
    default: './'
  sonar_url: 
    description: "url sonarqube"
    required: true
  sonar_token: 
    description: "token sonarqube"
    required: true
runs:
  using: "composite"
  steps:
      - run: echo hi!, we working.
        shell: bash
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Key Repository
        id: variables
        uses: actions/github-script@v5
        with:
          script: |
            const name = context.repo.repo
            const organization = context.repo.owner
            core.exportVariable('KEY_REPOSITORY', `${organization}_${name}`)
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ inputs.github_token }}  # Needed to get PR information, if any
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"${{ env.KEY_REPOSITORY }}" /d:sonar.login="${{ inputs.sonar_token }}" /d:sonar.host.url="${{ inputs.sonar_url }}" /d:sonar.qualitygate.wait=true
          dotnet nuget locals -c all
          dotnet nuget add source https://nuget.pkg.github.com/architecture-it/index.json --name github -u ${{ inputs.github_username }} -p ${{ inputs.github_token }} --store-password-in-clear-text
          dotnet restore
          dotnet build
          dotnet test
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ inputs.sonar_token }}"