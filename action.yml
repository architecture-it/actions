name: 'Validate Status Project (SonarQ)'
description: 'Unique step to Validate Status Project (SonarQ)'
inputs:
  sonar_url:
    description: "Url SonarQube"
    required: true
  sonar_token:
    description: "Token de acceso SonarQube"
    required: true
  projectKey:
    description: "Project Key SonarQube"
    required: true
  branch:
    description: "Branch SonarQube"
    required: false
    default: "main"


# sonar_url: ${{ secrets.SONAR_HOST_URL }}
#           sonar_token: ${{ secrets.SONAR_TOKEN }}
#           projectKey: architecture-it_stylesystem
#           branch: "main"
runs:
  using: "composite"
  steps:
    - uses: actions/github-script@v7
      id: validate-sonar
      with:     
        script: |
          const name = context.repo.repo;
          const organization = context.repo.owner;

          const projectKey = core.getInput('projectKey') || `${organization}_${name}`;
          const branch = core.getInput('branch');
          
          const url = `${{inputs.sonar_url}}/api/qualitygates/project_status`;
          const params = new URLSearchParams({
            branch: branch,
            projectKey: projectKey,
          });

          const { json, status: statusCode } = await fetch(`${url}?${params}`, {
              method: 'GET',
              headers: {
                'Authorization': 'Basic ' + Buffer.from(`${{inputs.sonar_token}}:`).toString('base64'),
              },
          });

          //Returns an HTTP code 404 if the analysis associated with the task is not found or does not exist.
          if (statusCode === 404) {
            core.setFailed(`The analysis associated with the task is not found or does not exist`);
          }

          const responseSonar = await json();

          const { projectStatus: { status } } = responseSonar;

          if (status !== 'OK') {
            core.setFailed(`SonarQube Quality Gate failed. Project Status: ${status}`);
            core.debug(JSON.stringify(responseSonar));
          }

          core.setOutput('sonar_status', status);
          core.exportVariable('SONAR_STATUS', status);

