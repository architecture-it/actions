name: "Create avro schema"
description: "Se realiza el an√°lisis en sonarqube para NET"
inputs:
  app_name:
    description: "application name"
    required: true
  github_token:
    required: true
  AVRO_VERSION:
    requiered: false
    default: 1.11.0
  INPUT:
    requiered: false
    default: schema
  PackageVersion:
    requiered: false
    default: 1.0.0
runs:
  using: "composite"
  steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Download avro results
        uses: actions/download-artifact@v1
        with:
          name: avro-schema
          path: ${{ inputs.INPUT }}
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.x   

      - name: Get Avro Gen
        run: dotnet tool install Apache.Avro.Tools --version ${{ inputs.AVRO_VERSION }} --global
        shell: bash

      - name: Create cproj
        run: dotnet new classlib --name Andreani.${{ inputs.app_name }}.Events -o Andreani/${{ inputs.app_name }}/Events
        shell: bash

      - name: Run AvroGen
        run: avrogen -p ${{ inputs.INPUT }}/schemas.avpr .
        shell: bash

      - name: Add Dependency Avro
        run: dotnet add Andreani.${{ inputs.app_name }}.Events.csproj package Apache.Avro --version ${{ inputs.AVRO_VERSION }}
        shell: bash
        working-directory: Andreani/${{ inputs.app_name }}/Events

      - name: Key Repository
        id: variables
        uses: actions/github-script@v5
        with:
          script: |
            const name = context.repo.repo
            const organization = context.repo.owner
            core.exportVariable('REPOSITORY', `${name}`)
            core.exportVariable('ORGANIZATION', `${organization}`)
          
      - name: Repository URL
        run: sed -i 's/<\/TargetFramework>/<\/TargetFramework><RepositoryUrl>https:\/\/github.com\/${{ env.ORGANIZATION }}\/${{ env.REPOSITORY }}<\/RepositoryUrl>/g' Andreani.${{ inputs.app_name }}.Event.csproj
        shell: bash
        working-directory: Andreani/${{ inputs.app_name }}/Events

      - name: Restore dependencies
        run: dotnet restore
        shell: bash
        working-directory: Andreani/${{ inputs.app_name }}/Events

      - name: Build
        run: dotnet build --configuration Release --no-restore
        shell: bash
        working-directory: Andreani/${{ inputs.app_name }}/Events

      - name: Pack
        run: dotnet pack -p:PackageVersion=${{ inputs.PackageVersion }} --no-build -c Release -o bin/Release/
        shell: bash
        working-directory: Andreani/${{ inputs.app_name }}/Events

      - name: Add NuGet sources
        run: dotnet nuget add source https://nuget.pkg.github.com/architecture-it/index.json --name github
        shell: bash

      - name: Nuget Push on Github
        run: dotnet nuget push --source github --api-key ${{ inputs.github_token }} --skip-duplicate bin/Release/*.nupkg
        shell: bash
        working-directory: Andreani/${{ inputs.app_name }}/Events
      
      - name: Archive schema avro result
        uses: actions/upload-artifact@v1
        with:
          name: lib
          path: Andreani/${{ inputs.app_name }}/Events
