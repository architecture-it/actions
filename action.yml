name: "Release npm"
description: "Realiza el release basado en los commits y conventional commit"
inputs:
  matrix_version:
    description: "matrix de pruebas node"
    required: true
  publish:
    description: "Publish to internal modules"
    required: false
    default: "false"
runs:
  using: "composite"
  steps:
    - name: Use Node.js ${{ inputs.matrix_version }} - Cache ${{ steps.package_manager.outputs.name }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: "npm"
    - name: Write configuration file
      shell: bash
      run: |
        echo
        'module.exports = {
          plugins: [
            "@semantic-release/commit-analyzer",
            "@semantic-release/release-notes-generator",
            [
              "@semantic-release/changelog",
              {
                changelogFile: "CHANGELOG.md",
              },
            ],
            [
              "@semantic-release/npm",
              {
                "npmPublish": ${{ inputs.publish }},
              }
            ],
            "@semantic-release/github",
            [
              "@semantic-release/exec",
              {
                prepareCmd: "npx rjp package.json version ${nextRelease.version}",
              },
            ],
            [
              "@semantic-release/git",
              {
                message: "Release <%= nextRelease.version %> [skip ci]",
                assets: ["package.json", "CHANGELOG.md"],
              },
            ],
          ],
          branches: ["main", { name: "development", prerelease: "development" }],
        }' >> release.config.js
    - name: Install dependencies
      run: |
        npm i --no-save replace-json-property@1.8.0 
        @semantic-release/changelog 
        @semantic-release/exec 
        @semantic-release/git 
        @semantic-release/github
      shell: bash
    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.ARQUITECTURA_DEPLOY }}
        GH_TOKEN: ${{ secrets.ARQUITECTURA_DEPLOY }}
      run: npx semantic-release
      shell: bash

