name: "Next Version"
description: "Realiza el release basado en los commits y conventional commit"
inputs:
  github_token:
    description: Github Token
    required: true
  branches:
    description: Branches to release
    required: false
    default: '["main"]'
  only_version:
    description: Only version
    required: false
    default: 'true'
  # todos no son requeridos para habilitar una integración progresiva
  jira_project_id:
    description: Jira Project Id (e.g. "PE20"). This will be used as prefix in tickets
    required: false
  jira_api_token:
    description: Jira API Token
    required: false
  jira_email:
    description: Jira Email
    required: false
  jira_host_url:
    description: Jira Host URL
    required: false
    default: "https://andreani.atlassian.net"
  # generado con la información de los inputs
  jira_release_name:
    description: "Title of the release name template. This will be used in name of publication in JIRA and followed by version. e.g. 'Test v${version}'"
    required: false
    default: ""

outputs:
  new-version:
    description: The version of the release
    value: ${{ steps.next-version.outputs.newVersion }}
  previous-version:
    description: The previous version of the release
    value: ${{ steps.next-version.outputs.previousVersion }}

runs:
  using: "composite"
  steps:
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
    - name: Generate .npmrc file
      uses: architecture-it/actions@generate-npmrc
      with:
        npm_token: ${{ inputs.github_token }}
    - name: Write bash script
      shell: bash
      run: |
        echo '#!/bin/bash' >> version.sh
        echo 'echo "newVersion=$1" >> $GITHUB_OUTPUT' >> version.sh
        echo 'echo "previousVersion=$2" >> $GITHUB_OUTPUT' >> version.sh
        chmod +x version.sh

    - name: Write config file
      shell: bash
      run: |
        echo 'module.exports = {
          plugins: [
            [
              "@semantic-release/commit-analyzer", 
              {
                  { breaking: true, release: "major" },
                  { revert: true, release: "patch" },
                  // Angular
                  { type: "feat", release: "minor" },
                  { type: "fix", release: "patch" },
                  { type: "perf", release: "patch" },
                  // Atom
                  { emoji: ":racehorse:", release: "patch" },
                  { emoji: ":bug:", release: "patch" },
                  { emoji: ":penguin:", release: "patch" },
                  { emoji: ":apple:", release: "patch" },
                  { emoji: ":checkered_flag:", release: "patch" },
                  // Ember
                  { tag: "BUGFIX", release: "patch" },
                  { tag: "FEATURE", release: "minor" },
                  { tag: "SECURITY", release: "patch" },
                  // ESLint
                  { tag: "Breaking", release: "major" },
                  { tag: "Fix", release: "patch" },
                  { tag: "Feat", release: "minor" },
                  { tag: "Update", release: "minor" },
                  { tag: "New", release: "minor" },
                  // Express
                  { component: "perf", release: "patch" },
                  { component: "deps", release: "patch" },
                  // JSHint
                  { type: "FEAT", release: "minor" },
                  { type: "FIX", release: "patch" },
                  // Architecture
                  { type: "docs", release: "patch" },
                  { type: "ref", release: "patch" },
                  { type: "styles", release: "patch" },
              }
            ],
            [
              "@semantic-release/exec",
              {
                verifyReleaseCmd: "./version.sh ${nextRelease.version} ${lastRelease.version}"
              }
            ],
            [
              "@architecture-it/semantic-release-jira",
              {
                "projectId": "${{ inputs.jira_project_id }}",
                "releaseName": "${{ inputs.jira_release_name }}",
                "jiraHost": "${{ inputs.jira_host_url }}",
                "ticketPrefixes": ["${{ inputs.jira_project_id }}"],
                released: false,
                setReleaseDate: false,
              }
            ]
          ],
          branches: ${{ inputs.branches }},
        };' >> release.config.cjs
      if: ${{ inputs.only_version == 'true' }}

    - name: Write config file
      shell: bash
      run: |
        echo 'module.exports = {
          plugins: [
            [
              "@semantic-release/commit-analyzer", 
              {
                  { breaking: true, release: "major" },
                  { revert: true, release: "patch" },
                  // Angular
                  { type: "feat", release: "minor" },
                  { type: "fix", release: "patch" },
                  { type: "perf", release: "patch" },
                  // Atom
                  { emoji: ":racehorse:", release: "patch" },
                  { emoji: ":bug:", release: "patch" },
                  { emoji: ":penguin:", release: "patch" },
                  { emoji: ":apple:", release: "patch" },
                  { emoji: ":checkered_flag:", release: "patch" },
                  // Ember
                  { tag: "BUGFIX", release: "patch" },
                  { tag: "FEATURE", release: "minor" },
                  { tag: "SECURITY", release: "patch" },
                  // ESLint
                  { tag: "Breaking", release: "major" },
                  { tag: "Fix", release: "patch" },
                  { tag: "Feat", release: "minor" },
                  { tag: "Update", release: "minor" },
                  { tag: "New", release: "minor" },
                  // Express
                  { component: "perf", release: "patch" },
                  { component: "deps", release: "patch" },
                  // JSHint
                  { type: "FEAT", release: "minor" },
                  { type: "FIX", release: "patch" },
                  // Architecture
                  { type: "docs", release: "patch" },
                  { type: "ref", release: "patch" },
                  { type: "styles", release: "patch" },
              }
            ],
            "@semantic-release/release-notes-generator",
            "@semantic-release/github",
            [
              "@semantic-release/exec",
              {
                verifyReleaseCmd: "./version.sh ${nextRelease.version} ${lastRelease.version}"
              }
            ],
            [
              "@architecture-it/semantic-release-jira",
              {
                "projectId": "${{ inputs.jira_project_id }}",
                "releaseName": "${{ inputs.jira_release_name }}",
                "jiraHost": "${{ inputs.jira_host_url }}",
                "ticketPrefixes": ["${{ inputs.jira_project_id }}"],
                released: true,
                setReleaseDate: true
              }
            ]
          ],
          branches: ${{ inputs.branches }},
        };' >> release.config.cjs
      if: ${{ inputs.only_version != 'true' }}

    - name: Get the version
      run: npx --no-install -y -p semantic-release -p @semantic-release/exec -p @semantic-release/git -p @semantic-release/github@10.0.0 -p @architecture-it/semantic-release-jira -c semantic-release
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        GH_TOKEN: ${{ inputs.github_token }}
        JIRA_EMAIL: ${{ inputs.jira_email }}
        JIRA_API_TOKEN: ${{ inputs.jira_api_token }}
      id: next-version
      shell: bash
